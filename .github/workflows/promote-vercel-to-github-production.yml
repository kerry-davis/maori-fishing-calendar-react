name: Promote Vercel to GitHub Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Find latest Vercel deployment for this commit
        id: find
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha;
            const { owner, repo } = context.repo;

            // Fetch deployments for this repo
            const deployments = await github.request(
              'GET /repos/{owner}/{repo}/deployments',
              { owner, repo, per_page: 100 }
            );

            // Keep those created by vercel[bot] for this commit
            const candidates = deployments.data.filter(d =>
              d.ref === sha && d.creator && d.creator.login === 'vercel[bot]'
            );

            if (!candidates.length) {
              core.setFailed('No Vercel deployment found for this commit. Ensure Vercel posts deployments to GitHub.');
              return;
            }

            // Most recent
            candidates.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const vercelDeployment = candidates[0];

            // Fetch statuses to get the environment URL
            const statuses = await github.request(
              'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses',
              { owner, repo, deployment_id: vercelDeployment.id }
            );

            const success = statuses.data.find(s => s.state === 'success') || statuses.data[0];
            const vercelUrl = (success && (success.environment_url || success.target_url)) || '';

            core.info(`Using Vercel deployment ${vercelDeployment.id} (${vercelDeployment.environment}) -> ${vercelUrl}`);
            core.setOutput('vercel_url', vercelUrl);
            core.setOutput('vercel_env', vercelDeployment.environment);

      - name: Create GitHub Production deployment
        id: create_deployment
        if: steps.find.outputs.vercel_url != null
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const vercelUrl = core.getInput('vercel_url', { required: false }) || core.getState('vercel_url') || process.env.VERCEL_URL || '';
            // Work around github-script input scoping: read from previous step outputs via env
          env:
            VERCEL_URL: ${{ steps.find.outputs.vercel_url }}
        continue-on-error: false

      - name: Post deployment and status (Production)
        if: steps.find.outputs.vercel_url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.sha;
            const vercelUrl = '${{ steps.find.outputs.vercel_url }}';
            const vercelEnv = '${{ steps.find.outputs.vercel_env }}';

            // Create a canonical Production deployment for this commit
            const createResp = await github.request('POST /repos/{owner}/{repo}/deployments', {
              owner,
              repo,
              ref: sha,
              environment: 'Production',
              description: `Vercel: ${vercelEnv}`,
              auto_merge: false,
              required_contexts: [],
              production_environment: true,
              transient_environment: false
            });

            const deploymentId = createResp.data.id;

            // Mark it successful and attach the Vercel URL
            await github.request('POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses', {
              owner,
              repo,
              deployment_id: deploymentId,
              state: 'success',
              environment: 'Production',
              environment_url: vercelUrl,
              target_url: vercelUrl,
              log_url: vercelUrl,
              description: 'Deployment has completed on Vercel'
            });

            core.info(`Created GitHub Production deployment ${deploymentId} -> ${vercelUrl}`);
